@model Hotel.ViewModel.RoomViewModel
@{
    ViewBag.Title = "Index";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadRoomDetails();
        $("#txtRoomNum").val("0");
        $("#btnSave").click(function () {
            if (!$("#formRoom").valid()) {
                return;
            }
            SaveRoomData();
        });
    });

    function DeleteRoom(RoomNum) {
        var result = confirm("Вы уверены, чтот хотите удалить данные о комнате? ");
        if (result === false) {
            return false;
        }
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: { RoomNum: RoomNum },
            url: '/Room/DeleteRoomdetails',
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    LoadRoomDetails();
                }
            },
            error: function () {
                alert("Возникли проблемы с вашим запросом. Попробуйте позже");
            }
    });
    }

    function EditRoom(RoomNum) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: { RoomNum: RoomNum },
            url: '/Room/EditRoomdetails',
            success: function (data) {
                console.log(data);
                $("#txtRoomNum").val(data.RoomNum);
                $("#txtRoomPlaces").val(data.Places);
                $("#ddRoomClass").val(data.CategoryClass);
                $("#ddRoomWindow").val(data.CategoryWindow);
                $("#ddRoomEating").val(data.CategoryEating);
                $("#txtDirty").val(data.dirty);
                $("#txtRoomFloor").val(data.C_Floor);
                $("#txtRoomCost").val(data.cost);
                $("#imgRoom").attr('src', "../RoomImages/" + data.RoomImage);
                $("#divAddRoom").modal({ show: true });
                $("#btnSave").text("Обновить");
            },
            error: function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                alert(err.Message);
            }
        });
    }

    function LoadRoomDetails() {

        $.ajax({
            async: true,
            data: 'GET',
            dataType: 'HTML',
            contentType: false,
            processData: false,
            url: '/Room/GetAllRooms',
            success: function (data) {
                $("#divLoadRooms").html(data);
            },
            error: function () {
                alert('Возникли проблемы с вашим запросом.');
            }
        })
    }

    function SaveRoomData() {
        var formData = new FormData;
        formData.append("RoomNum", $("#txtRoomNum").val());
        formData.append("Places", $("#txtRoomPlaces").val());
        formData.append("CategoryClass", $("#ddRoomClass").val());
        formData.append("CategoryWindow", $("#ddRoomWindow").val());
        formData.append("CategoryEating", $("#ddRoomEating").val());
        formData.append("dirty", $("#txtDirty").val());
        formData.append("C_Floor", $("#txtRoomFloor").val());
        formData.append("cost", $("#txtRoomCost").val());
        formData.append("Image", $("#UploadImage").get(0).files[0]);


        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    ResetRoomInformation();
                    LoadRoomDetails();
                }
            },
            error: function () {
                alert('Произошла проблема с вашим запросом. Попробуйте еще раз!');
            }
        })
    }
    function ResetRoomInformation() {
        $("#txtRoomNum").val('');
        $("#txtRoomPlaces").val('');
        $("#ddRoomClass").val(1);
        $("#ddRoomWindow").val(1);
        $("#ddRoomEating").val(1);
        $("#txtDirty").val(1);
        $("#txtRoomFloor").val('');
        $("#txtRoomCost").val('');
        $("#UploadImage").val('');
        $("#txtRoomNum").focus();
        $("#imgRoom").removeAttr('src');
        $("#btnSave").text("Сохранить");
    }
    function DisplayImage(result) {
        if (result.files && result.files[0]) {
            var fileReader = new FileReader();
            fileReader.onload = function (e) {
                $("#imgRoom").attr('src', e.target.result);
            }
            fileReader.readAsDataURL(result.files[0]);
        }
    }
</script>


<div style="margin-top: 30px">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divAddRoom" data-backdrop="static" data-keyboard="false"> Зарегистрировать комнату</button>
</div>
<div id="divAddRoom" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="width: 600px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Комната</h4>
            </div>
            <div class="modal-body">
                <form id="formRoom">
                    <div class="container" style="width: 600px">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RoomNum)
                            @Html.TextBoxFor(model => model.RoomNum, new { @class = "form-control", id = "txtRoomNum" })
                            @Html.ValidationMessageFor(model => model.RoomNum, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.cost)
                            @Html.TextBoxFor(model => model.cost, new { @class = "form-control", id = "txtRoomCost" })
                            @Html.ValidationMessageFor(model => model.cost, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ListCategoryClass)
                            @Html.DropDownListFor(model => model.CategoryClass, @Model.ListCategoryClass, new { @class = "form-control", id = "ddRoomClass" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ListCategoryWindow)
                            @Html.DropDownListFor(model => model.CategoryWindow, @Model.ListCategoryWindow, new { @class = "form-control", id = "ddRoomWindow" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ListCategoryEating)
                            @Html.DropDownListFor(model => model.CategoryEating, @Model.ListCategoryEating, new { @class = "form-control", id = "ddRoomEating" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Places)
                            @Html.TextBoxFor(model => model.Places, new { @class = "form-control", id = "txtRoomPlaces" })
                            @Html.ValidationMessageFor(model => model.Places, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Фото помещения")
                            <input id="UploadImage" type="file" class="form-control" name="roomImage" title="Load Image" onchange="DisplayImage(this)" />
                            <img id="imgRoom" height="200" width="200" style="border: solid" />
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.C_Floor)
                            @Html.TextBoxFor(model => model.C_Floor, new { @class = "form-control", id = "txtRoomFloor" })
                            @Html.ValidationMessageFor(model => model.C_Floor, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">

                            @Html.LabelFor(model => model.dirty)
                            @Html.DropDownListFor(model => model.dirty, @Model.ListDirty, new { @class = "form-control", id = "txtDirty" })
                        </div>
                    </div>
                </form> 
            </div>
            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success">Сохранить</button>&nbsp;
                <button type="button" data-dismiss="modal" class="btn btn-danger">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<div style="margin-top: 20px"></div>
<div id="divLoadRooms">

</div>
